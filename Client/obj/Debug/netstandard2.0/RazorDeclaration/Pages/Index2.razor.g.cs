#pragma checksum "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\Pages\Index2.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a109b8560c79bcb7dc2e070fb2bb117b8f4bba51"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace blazorhosted.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 5 "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\_Imports.razor"
using blazorhosted.Client;

#line default
#line hidden
#line 6 "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\_Imports.razor"
using blazorhosted.Client.Shared;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/dhello")]
    public class Index2 : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 6 "C:\Users\taniguchi\source\repos\githubblazor\Blazor\Client\Pages\Index2.razor"
       
    string message = "Another Hello World!";
    bool active = false;

    void RequestToStop()
    {
        active = false;
    }

    async void RotateMessage()
    {
        active = true;
        while(active)
        {
            message = message.Substring(1) + message.Substring(0, 1);
            this.StateHasChanged();
            await Task.Delay(500);
        }
    }
    
    void Hello()
    {
        message = "";
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
